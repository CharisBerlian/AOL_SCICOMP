# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tiDpb3EoMgucGSfCQ2f8WqeX6ACQ3uqB
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from google.colab import drive

drive.mount('/content/drive')
file_path = '/content/drive/My Drive/excelno1.xlsx'
df = pd.read_excel(file_path)
print(df)
data = df.iloc[0].values

data = data[~np.isnan(data)]

x = np.arange(1, len(data) + 1)

def poly(x, a, b, c, d):
    return a * x**3 + b * x**2 + c * x + d
params, _ = curve_fit(poly, x, data)

trend = poly(x, *params)

residuals = data - trend
ss_res = np.sum(residuals**2)
ss_tot = np.sum((data - np.mean(data))**2)
r_squared = 1 - (ss_res / ss_tot)

print(f'R-squared: {r_squared:.3f}')

plt.plot(x, data, marker='o', label='Original Data')
plt.plot(x, trend, color='red', label='Trend Line')
plt.title('Monthly Bag Production with Trend Line')
plt.xlabel('Month')
plt.ylabel('Production')
plt.legend()
plt.grid(True)
plt.show()

"""NO.2

Konversi ke dalam bentuk numerik menggunakan polinomial kubik sangat akurat, seperti yang ditunjukkan dengan nilai r-squared. dengan metode polinomial langsung dapat memberikan representasi yang tepat, memastikan akurasi yang tinggi.


"""

from scipy.optimize import fsolve

def equation(x, a, b, c, d):
    return a * x**3 + b * x**2 + c * x + d - 25000

root = fsolve(equation, x0=1, args=tuple(params))
start_building_month = root[0] - 13

print(f'The month when production goes over 25,000 bags: {root[0]}')
print(f'The month to start building the new warehouse: {start_building_month}')